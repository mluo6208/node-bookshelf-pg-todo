'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ClearMaskPass = exports.MaskPass = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Pass3 = require('./Pass.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MaskPass = exports.MaskPass = function (_Pass) {
    (0, _inherits3.default)(MaskPass, _Pass);

    function MaskPass(name, scene, camera) {
        (0, _classCallCheck3.default)(this, MaskPass);

        var _this = (0, _possibleConstructorReturn3.default)(this, (MaskPass.__proto__ || Object.getPrototypeOf(MaskPass)).call(this, name));

        _this.scene = scene;
        _this.camera = camera;

        _this.clear = true;
        _this.needsSwap = false;
        _this.inverse = false;
        return _this;
    }

    (0, _createClass3.default)(MaskPass, [{
        key: 'render',
        value: function render(renderer, writeBuffer, readBuffer) {
            // REMARK: "maskActive" and "delta" never used. Removed.
            // render(renderer, writeBuffer, readBuffer, delta, maskActive) {

            var context = renderer.context;
            var state = renderer.state;

            // don't update color or depth
            state.buffers.color.setMask(false);
            state.buffers.depth.setMask(false);

            // lock buffers
            state.buffers.color.setLocked(true);
            state.buffers.depth.setLocked(true);

            // set up stencil
            var writeValue = this.inverse ? 0 : 1;
            var clearValue = this.inverse ? 1 : 0;

            state.buffers.stencil.setTest(true);
            state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE);
            state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff);
            state.buffers.stencil.setClear(clearValue);

            // draw into the stencil buffer
            renderer.render(this.scene, this.camera, readBuffer, this.clear);
            renderer.render(this.scene, this.camera, writeBuffer, this.clear);

            // unlock color and depth buffer for subsequent rendering
            state.buffers.color.setLocked(false);
            state.buffers.depth.setLocked(false);

            // only render where stencil is set to 1
            state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff); // draw if == 1
            state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);
        }
    }]);
    return MaskPass;
}(_Pass3.Pass); /**
                 * @author alteredq / http://alteredqualia.com/
                 * @author yannis torres / es6 migration
                 */

var ClearMaskPass = exports.ClearMaskPass = function (_Pass2) {
    (0, _inherits3.default)(ClearMaskPass, _Pass2);

    function ClearMaskPass(name) {
        (0, _classCallCheck3.default)(this, ClearMaskPass);

        var _this2 = (0, _possibleConstructorReturn3.default)(this, (ClearMaskPass.__proto__ || Object.getPrototypeOf(ClearMaskPass)).call(this, name));

        _this2.needsSwap = false;
        return _this2;
    }

    (0, _createClass3.default)(ClearMaskPass, [{
        key: 'render',
        value: function render(renderer) {
            // REMARK: "writeBuffer", "readBuffer", "maskActive" and "delta" never used. Removed.
            // render(renderer, writeBuffer, readBuffer, delta, maskActive) {

            renderer.state.buffers.stencil.setTest(false);
        }
    }]);
    return ClearMaskPass;
}(_Pass3.Pass);