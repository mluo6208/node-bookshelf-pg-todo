'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TexturePass = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _three = require('three');

var THREE = _interopRequireWildcard(_three);

var _CopyShader = require('../shader/CopyShader.js');

var _Pass2 = require('./Pass.js');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TexturePass = exports.TexturePass = function (_Pass) {
    (0, _inherits3.default)(TexturePass, _Pass);

    function TexturePass(name, map, opacity) {
        (0, _classCallCheck3.default)(this, TexturePass);

        var _this = (0, _possibleConstructorReturn3.default)(this, (TexturePass.__proto__ || Object.getPrototypeOf(TexturePass)).call(this, name));

        if (_CopyShader.CopyShader === undefined) console.error('TexturePass relies on CopyShader');

        var shader = _CopyShader.CopyShader;

        _this.map = map;
        _this.opacity = opacity === undefined ? 1.0 : opacity;

        _this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);

        _this.material = new THREE.ShaderMaterial({
            uniforms: _this.uniforms,
            vertexShader: shader.vertexShader,
            fragmentShader: shader.fragmentShader,
            depthTest: false,
            depthWrite: false
        });

        _this.needsSwap = false;

        _this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);
        _this.scene = new THREE.Scene();

        _this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);
        _this.scene.add(_this.quad);
        return _this;
    }

    (0, _createClass3.default)(TexturePass, [{
        key: 'render',
        value: function render(renderer, writeBuffer, readBuffer) {
            // REMARK: "maskActive" and "delta" never used. Removed.
            // render(renderer, writeBuffer, readBuffer, delta, maskActive) {

            var oldAutoClear = renderer.autoClear;
            renderer.autoClear = false;

            this.quad.material = this.material;

            this.uniforms.opacity.value = this.opacity;
            this.uniforms.tDiffuse.value = this.map;
            this.material.transparent = this.opacity < 1.0;

            renderer.render(this.scene, this.camera, this.renderToScreen ? null : readBuffer, this.clear);
            renderer.autoClear = oldAutoClear;
        }
    }]);
    return TexturePass;
}(_Pass2.Pass); /**
                 * @author alteredq / http://alteredqualia.com/
                 * @author yannis torres / es6 migration
                 */